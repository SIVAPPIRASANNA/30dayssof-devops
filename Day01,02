Devlopment --> Code 
Operations --> build,testing,security analysis, deployment, manage

CI /CD 
Continuous Integration -> commit , build , automation build, reporting the result

Continuous Deployment -> dev, QA, PPD, Prod, DR(Disaster Recovery)
Deployment Pipeline -> automated deploy, testing, release rollback, monitoring

advantages- time saved, early bug detection, incresed collaboration, improved quality, agility and flexibility


MAVEN- create java project and build manage it
(src, pom.xml)
Build LifeCycle:maven has 3 built lifecycles clean,default and site.

clean: deletes any build output generated by previous builds
Default: 
  validate - validates the project structure and verifies if all necessary information is available.
  compile - compiles the project's source code.
  test - runs unit tests against compiled source code.
  package - packages the compiled code into a distributable format(JAR,WAR)
  install - installs the package into the local repository for use as a dependency in other projects
  deploy - deploys the package to a remote repository for for sharing with other developers /environments Push to Nexus

Site: generates project documentation and reports
Site-deploy : deploys the generated documentation to a remote webserver.

Mavencommand examples:
mvn compile: compiles the projects source code.
mvn test: runs unit testsagainst compile code.
mvn package: packages the compiled code into a distributable format.
mvn install: installs the package into a local repository.
mvn deploy : deploys the package to a remote repository.
mvn site: generates project reports and documentation.
mvn site-deploy:
mvn clean:

